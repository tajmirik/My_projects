
AVRASM ver. 2.1.30  F:\AVR\Gard_AVR\Gard\P3_control relay\Simulations\Code\Debug\List\two relay.asm Wed Mar 27 11:57:38 2024

F:\AVR\Gard_AVR\Gard\P3_control relay\Simulations\Code\Debug\List\two relay.asm(1088): warning: Register r5 already defined by the .DEF directive
F:\AVR\Gard_AVR\Gard\P3_control relay\Simulations\Code\Debug\List\two relay.asm(1089): warning: Register r4 already defined by the .DEF directive
F:\AVR\Gard_AVR\Gard\P3_control relay\Simulations\Code\Debug\List\two relay.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0122 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x3:
00002a 063f
00002b 4f5b
00002c 6d66
00002d 077d      	.DB  0x3F,0x6,0x5B,0x4F,0x66,0x6D,0x7D,0x7
00002e 4f7f
F:\AVR\Gard_AVR\Gard\P3_control relay\Simulations\Code\Debug\List\two relay.asm(1123): warning: .cseg .db misalignment - padding zero byte
00002f 0040      	.DB  0x7F,0x4F,0x40
                 _0x0:
000030 6552
000031 616c
000032 2d79
000033 2031      	.DB  0x52,0x65,0x6C,0x61,0x79,0x2D,0x31,0x20
000034 3d3c
000035 5200
000036 6c65
000037 7961      	.DB  0x3C,0x3D,0x0,0x52,0x65,0x6C,0x61,0x79
000038 322d
000039 0020
00003a 6552
00003b 616c      	.DB  0x2D,0x32,0x20,0x0,0x52,0x65,0x6C,0x61
00003c 2d79
00003d 2031
00003e 5200
00003f 6c65      	.DB  0x79,0x2D,0x31,0x20,0x0,0x52,0x65,0x6C
000040 7961
000041 322d
000042 3c20
000043 003d      	.DB  0x61,0x79,0x2D,0x32,0x20,0x3C,0x3D,0x0
000044 6552
000045 616c
000046 2d79
000047 2033      	.DB  0x52,0x65,0x6C,0x61,0x79,0x2D,0x33,0x20
000048 3d3c
000049 5200
00004a 6c65
00004b 7961      	.DB  0x3C,0x3D,0x0,0x52,0x65,0x6C,0x61,0x79
00004c 342d
00004d 0020
00004e 6552
00004f 616c      	.DB  0x2D,0x34,0x20,0x0,0x52,0x65,0x6C,0x61
000050 2d79
000051 2033
000052 5200
000053 6c65      	.DB  0x79,0x2D,0x33,0x20,0x0,0x52,0x65,0x6C
000054 7961
000055 342d
000056 3c20
000057 003d      	.DB  0x61,0x79,0x2D,0x34,0x20,0x3C,0x3D,0x0
000058 6552
000059 616c
00005a 2d79
00005b 2031      	.DB  0x52,0x65,0x6C,0x61,0x79,0x2D,0x31,0x20
00005c 7369
00005d 003a
00005e 4e4f
00005f 4f00      	.DB  0x69,0x73,0x3A,0x0,0x4F,0x4E,0x0,0x4F
000060 4646
000061 5200
000062 6c65
000063 7961      	.DB  0x46,0x46,0x0,0x52,0x65,0x6C,0x61,0x79
000064 322d
000065 6920
000066 3a73
000067 5200      	.DB  0x2D,0x32,0x20,0x69,0x73,0x3A,0x0,0x52
000068 6c65
000069 7961
00006a 332d
00006b 6920      	.DB  0x65,0x6C,0x61,0x79,0x2D,0x33,0x20,0x69
00006c 3a73
00006d 5200
00006e 6c65
00006f 7961      	.DB  0x73,0x3A,0x0,0x52,0x65,0x6C,0x61,0x79
000070 342d
000071 6920
000072 3a73
000073 2000      	.DB  0x2D,0x34,0x20,0x69,0x73,0x3A,0x0,0x20
000074 3152
000075 2020
000076 3252
000077 2020      	.DB  0x52,0x31,0x20,0x20,0x52,0x32,0x20,0x20
000078 3352
000079 2020
00007a 3452
00007b 2020      	.DB  0x52,0x33,0x20,0x20,0x52,0x34,0x20,0x20
00007c 4b00
00007d 6d61
00007e 6179
00007f 2062      	.DB  0x0,0x4B,0x61,0x6D,0x79,0x61,0x62,0x20
000080 6154
000081 6d6a
000082 7269
000083 0069      	.DB  0x54,0x61,0x6A,0x6D,0x69,0x72,0x69,0x0
000084 7241
000085 2065
000086 6f79
000087 2075      	.DB  0x41,0x72,0x65,0x20,0x79,0x6F,0x75,0x20
000088 6552
000089 6461
00008a 3f79
00008b 6900      	.DB  0x52,0x65,0x61,0x64,0x79,0x3F,0x0,0x69
00008c 2066
00008d 2079
00008e 756a
00008f 7473      	.DB  0x66,0x20,0x79,0x20,0x6A,0x75,0x73,0x74
000090 7020
000091 6572
000092 7373
000093 6d20      	.DB  0x20,0x70,0x72,0x65,0x73,0x73,0x20,0x6D
000094 6e65
000095 0075      	.DB  0x65,0x6E,0x75,0x0
                 _0x2000003:
000096 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000097 000b      	.DW  0x0B
000098 03a9      	.DW  _segment
000099 0054      	.DW  _0x3*2
                 
00009a 000b      	.DW  0x0B
00009b 0260      	.DW  _0x16
00009c 0060      	.DW  _0x0*2
                 
00009d 0009      	.DW  0x09
00009e 026b      	.DW  _0x16+11
00009f 006b      	.DW  _0x0*2+11
                 
0000a0 0009      	.DW  0x09
0000a1 0274      	.DW  _0x16+20
0000a2 0074      	.DW  _0x0*2+20
                 
0000a3 000b      	.DW  0x0B
0000a4 027d      	.DW  _0x16+29
0000a5 007d      	.DW  _0x0*2+29
                 
0000a6 000b      	.DW  0x0B
0000a7 0288      	.DW  _0x16+40
0000a8 0088      	.DW  _0x0*2+40
                 
0000a9 0009      	.DW  0x09
0000aa 0293      	.DW  _0x16+51
0000ab 0093      	.DW  _0x0*2+51
                 
0000ac 0009      	.DW  0x09
0000ad 029c      	.DW  _0x16+60
0000ae 009c      	.DW  _0x0*2+60
                 
0000af 000b      	.DW  0x0B
0000b0 02a5      	.DW  _0x16+69
0000b1 00a5      	.DW  _0x0*2+69
                 
0000b2 000c      	.DW  0x0C
0000b3 02b0      	.DW  _0x16+80
0000b4 00b0      	.DW  _0x0*2+80
                 
0000b5 0003      	.DW  0x03
0000b6 02bc      	.DW  _0x16+92
0000b7 00bc      	.DW  _0x0*2+92
                 
0000b8 0004      	.DW  0x04
0000b9 02bf      	.DW  _0x16+95
0000ba 00bf      	.DW  _0x0*2+95
                 
0000bb 000c      	.DW  0x0C
0000bc 02c3      	.DW  _0x16+99
0000bd 00c3      	.DW  _0x0*2+99
                 
0000be 0003      	.DW  0x03
0000bf 02cf      	.DW  _0x16+111
0000c0 00bc      	.DW  _0x0*2+92
                 
0000c1 0004      	.DW  0x04
0000c2 02d2      	.DW  _0x16+114
0000c3 00bf      	.DW  _0x0*2+95
                 
0000c4 000c      	.DW  0x0C
0000c5 02d6      	.DW  _0x16+118
0000c6 00cf      	.DW  _0x0*2+111
                 
0000c7 0003      	.DW  0x03
0000c8 02e2      	.DW  _0x16+130
0000c9 00bc      	.DW  _0x0*2+92
                 
0000ca 0004      	.DW  0x04
0000cb 02e5      	.DW  _0x16+133
0000cc 00bf      	.DW  _0x0*2+95
                 
0000cd 000c      	.DW  0x0C
0000ce 02e9      	.DW  _0x16+137
0000cf 00db      	.DW  _0x0*2+123
                 
0000d0 0003      	.DW  0x03
0000d1 02f5      	.DW  _0x16+149
0000d2 00bc      	.DW  _0x0*2+92
                 
0000d3 0004      	.DW  0x04
0000d4 02f8      	.DW  _0x16+152
0000d5 00bf      	.DW  _0x0*2+95
                 
0000d6 000c      	.DW  0x0C
0000d7 02fc      	.DW  _0x16+156
0000d8 00b0      	.DW  _0x0*2+80
                 
0000d9 0003      	.DW  0x03
0000da 0308      	.DW  _0x16+168
0000db 00bc      	.DW  _0x0*2+92
                 
0000dc 0004      	.DW  0x04
0000dd 030b      	.DW  _0x16+171
0000de 00bf      	.DW  _0x0*2+95
                 
0000df 000c      	.DW  0x0C
0000e0 030f      	.DW  _0x16+175
0000e1 00c3      	.DW  _0x0*2+99
                 
0000e2 0003      	.DW  0x03
0000e3 031b      	.DW  _0x16+187
0000e4 00bc      	.DW  _0x0*2+92
                 
0000e5 0004      	.DW  0x04
0000e6 031e      	.DW  _0x16+190
0000e7 00bf      	.DW  _0x0*2+95
                 
0000e8 000c      	.DW  0x0C
0000e9 0322      	.DW  _0x16+194
0000ea 00cf      	.DW  _0x0*2+111
                 
0000eb 0003      	.DW  0x03
0000ec 032e      	.DW  _0x16+206
0000ed 00bc      	.DW  _0x0*2+92
                 
0000ee 0004      	.DW  0x04
0000ef 0331      	.DW  _0x16+209
0000f0 00bf      	.DW  _0x0*2+95
                 
0000f1 000c      	.DW  0x0C
0000f2 0335      	.DW  _0x16+213
0000f3 00db      	.DW  _0x0*2+123
                 
0000f4 0003      	.DW  0x03
0000f5 0341      	.DW  _0x16+225
0000f6 00bc      	.DW  _0x0*2+92
                 
0000f7 0004      	.DW  0x04
0000f8 0344      	.DW  _0x16+228
0000f9 00bf      	.DW  _0x0*2+95
                 
0000fa 0012      	.DW  0x12
0000fb 0348      	.DW  _0x16+232
0000fc 00e7      	.DW  _0x0*2+135
                 
0000fd 0003      	.DW  0x03
0000fe 035a      	.DW  _0x16+250
0000ff 00bc      	.DW  _0x0*2+92
                 
000100 0004      	.DW  0x04
000101 035d      	.DW  _0x16+253
000102 00bf      	.DW  _0x0*2+95
                 
000103 0003      	.DW  0x03
000104 0361      	.DW  _0x16+257
000105 00bc      	.DW  _0x0*2+92
                 
000106 0004      	.DW  0x04
000107 0364      	.DW  _0x16+260
000108 00bf      	.DW  _0x0*2+95
                 
000109 0003      	.DW  0x03
00010a 0368      	.DW  _0x16+264
00010b 00bc      	.DW  _0x0*2+92
                 
00010c 0004      	.DW  0x04
00010d 036b      	.DW  _0x16+267
00010e 00bf      	.DW  _0x0*2+95
                 
00010f 0003      	.DW  0x03
000110 036f      	.DW  _0x16+271
000111 00bc      	.DW  _0x0*2+92
                 
000112 0004      	.DW  0x04
000113 0372      	.DW  _0x16+274
000114 00bf      	.DW  _0x0*2+95
                 
000115 000f      	.DW  0x0F
000116 0376      	.DW  _0x50
000117 00f9      	.DW  _0x0*2+153
                 
000118 000f      	.DW  0x0F
000119 0385      	.DW  _0x50+15
00011a 0108      	.DW  _0x0*2+168
                 
00011b 0015      	.DW  0x15
00011c 0394      	.DW  _0x50+30
00011d 0117      	.DW  _0x0*2+183
                 
00011e 0002      	.DW  0x02
00011f 03b4      	.DW  __base_y_G100
000120 012c      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000121 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000122 94f8      	CLI
000123 27ee      	CLR  R30
000124 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000125 e0f1      	LDI  R31,1
000126 bffb      	OUT  GICR,R31
000127 bfeb      	OUT  GICR,R30
000128 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000129 e08d      	LDI  R24,(14-2)+1
00012a e0a2      	LDI  R26,2
00012b 27bb      	CLR  R27
                 __CLEAR_REG:
00012c 93ed      	ST   X+,R30
00012d 958a      	DEC  R24
00012e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00012f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000130 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000131 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000132 93ed      	ST   X+,R30
000133 9701      	SBIW R24,1
000134 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000135 e2ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000136 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000137 9185      	LPM  R24,Z+
000138 9195      	LPM  R25,Z+
000139 9700      	SBIW R24,0
00013a f061      	BREQ __GLOBAL_INI_END
00013b 91a5      	LPM  R26,Z+
00013c 91b5      	LPM  R27,Z+
00013d 9005      	LPM  R0,Z+
00013e 9015      	LPM  R1,Z+
00013f 01bf      	MOVW R22,R30
000140 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000141 9005      	LPM  R0,Z+
000142 920d      	ST   X+,R0
000143 9701      	SBIW R24,1
000144 f7e1      	BRNE __GLOBAL_INI_LOOP
000145 01fb      	MOVW R30,R22
000146 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000147 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000148 bfed      	OUT  SPL,R30
000149 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00014a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00014b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00014c e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00014d 940c 014f 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <delay.h>
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#define menu_page 1
                 ;#define relay_page 2
                 ;#define status_page 3
                 ;#define menu_key PINB.0
                 ;#define select_key PINB.1
                 ;#define status_key PINB.2
                 ;#define En_relay_1 PORTC.0
                 ;#define En_relay_2 PORTC.1
                 ;#define En_relay_3 PORTC.2
                 ;#define En_relay_4 PORTC.3
                 ;#define Read_relay_1 PINC.0
                 ;#define Read_relay_2 PINC.1
                 ;#define Read_relay_3 PINC.2
                 ;#define Read_relay_4 PINC.3
                 ;/////////////////////////////////////////////////
                 ;//just making change to check the git
                 ;//Functions
                 ;void lcd_start();
                 ;// Declare your global variables here
                 ;// for a comoon cathode sement:
                 ;//
                 ;unsigned char segment[]={0x3f,0x06,0x5b,0x4f, //0     1    2     3
                 ;                         0x66,0x6d,0x7d,0x07, //4     5   6      7
                 ;                            0x7f,0x4f,0X40};  //8   9     -
                 
                 	.DSEG
                 ;
                 ;void main(void)
                 ; 0000 001E {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 001F //////////////////////////////////////////////////////////////
                 ; 0000 0020 // Declare your local variables here
                 ; 0000 0021 unsigned char page_state,rly_pick=0;
                 ; 0000 0022 
                 ; 0000 0023 //////////////////////////////////////////////////////////////
                 ; 0000 0024 // Input/Output Ports initialization
                 ; 0000 0025 
                 ; 0000 0026 DDRB=0XF8;
                 ;	page_state -> R17
                 ;	rly_pick -> R16
00014f e000      	LDI  R16,0
000150 efe8      	LDI  R30,LOW(248)
000151 bbe7      	OUT  0x17,R30
                 ; 0000 0027 PORTB=0X07;
000152 e0e7      	LDI  R30,LOW(7)
000153 bbe8      	OUT  0x18,R30
                 ; 0000 0028 DDRC=0X0F;
000154 e0ef      	LDI  R30,LOW(15)
000155 bbe4      	OUT  0x14,R30
                 ; 0000 0029 PORTC=0X00;
000156 e0e0      	LDI  R30,LOW(0)
000157 bbe5      	OUT  0x15,R30
                 ; 0000 002A DDRD=0XFF;
000158 efef      	LDI  R30,LOW(255)
000159 bbe1      	OUT  0x11,R30
                 ; 0000 002B PORTD=segment[10];
                +
00015a 91e0 03b3+LDS R30 , _segment + ( 10 )
                 	__GETB1MN _segment,10
00015c bbe2      	OUT  0x12,R30
                 ; 0000 002C 
                 ; 0000 002D ///////////////////////////////////////////////////////////
                 ; 0000 002E lcd_start();
00015d d13d      	RCALL _lcd_start
                 ; 0000 002F 
                 ; 0000 0030 /////////////////////////////////////////////////////////////
                 ; 0000 0031 page_state=menu_page;
00015e e011      	LDI  R17,LOW(1)
                 ; 0000 0032 while (1)
                 _0x4:
                 ; 0000 0033     {
                 ; 0000 0034     // Place your code here
                 ; 0000 0035 /////////////////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 0036     //Menu Key function:
                 ; 0000 0037     if (menu_key==0)
00015f 99b0      	SBIC 0x16,0
000160 c042      	RJMP _0x7
                 ; 0000 0038         {
                 ; 0000 0039         if (page_state==menu_page)
000161 3011      	CPI  R17,1
000162 f439      	BRNE _0x8
                 ; 0000 003A             {
                 ; 0000 003B             rly_pick++;
000163 5f0f      	SUBI R16,-1
                 ; 0000 003C             rly_pick=rly_pick==5 ? 1 :rly_pick;
000164 3005      	CPI  R16,5
000165 f411      	BRNE _0x9
000166 e0e1      	LDI  R30,LOW(1)
000167 c001      	RJMP _0xA
                 _0x9:
000168 2fe0      	MOV  R30,R16
                 _0xA:
000169 2f0e      	MOV  R16,R30
                 ; 0000 003D             }
                 ; 0000 003E         switch (page_state)
                 _0x8:
00016a 2fe1      	MOV  R30,R17
00016b e0f0      	LDI  R31,0
                 ; 0000 003F             {
                 ; 0000 0040             case relay_page:
00016c 30e2      	CPI  R30,LOW(0x2)
00016d e0a0      	LDI  R26,HIGH(0x2)
00016e 07fa      	CPC  R31,R26
00016f f411      	BRNE _0xF
                 ; 0000 0041                 page_state=menu_page;
000170 e011      	LDI  R17,LOW(1)
                 ; 0000 0042 
                 ; 0000 0043 
                 ; 0000 0044             case menu_page:
000171 c004      	RJMP _0x10
                 _0xF:
000172 30e1      	CPI  R30,LOW(0x1)
000173 e0a0      	LDI  R26,HIGH(0x1)
000174 07fa      	CPC  R31,R26
000175 f569      	BRNE _0xE
                 _0x10:
                 ; 0000 0045                 {
                 ; 0000 0046                 PORTD=segment[10];
                +
000176 91e0 03b3+LDS R30 , _segment + ( 10 )
                 	__GETB1MN _segment,10
000178 bbe2      	OUT  0x12,R30
                 ; 0000 0047                 switch (rly_pick)
000179 d1b7      	RCALL SUBOPT_0x0
                 ; 0000 0048                     {
                 ; 0000 0049                     case 1:
00017a f439      	BRNE _0x15
                 ; 0000 004A                         lcd_clear();
00017b d15a      	RCALL _lcd_clear
                 ; 0000 004B                         lcd_puts("Relay-1 <=");
                +
00017c e6a0     +LDI R26 , LOW ( _0x16 + ( 0 ) )
00017d e0b2     +LDI R27 , HIGH ( _0x16 + ( 0 ) )
                 	__POINTW2MN _0x16,0
00017e d1b8      	RCALL SUBOPT_0x1
                 ; 0000 004C                         lcd_gotoxy(0,1);
                 ; 0000 004D                         lcd_puts("Relay-2 ");
                +
00017f e6ab     +LDI R26 , LOW ( _0x16 + ( 11 ) )
000180 e0b2     +LDI R27 , HIGH ( _0x16 + ( 11 ) )
                 	__POINTW2MN _0x16,11
000181 c020      	RJMP _0x51
                 ; 0000 004E                         break;
                 ; 0000 004F                     case 2:
                 _0x15:
000182 30e2      	CPI  R30,LOW(0x2)
000183 e0a0      	LDI  R26,HIGH(0x2)
000184 07fa      	CPC  R31,R26
000185 f439      	BRNE _0x17
                 ; 0000 0050                         lcd_clear();
000186 d14f      	RCALL _lcd_clear
                 ; 0000 0051                         lcd_puts("Relay-1 ");
                +
000187 e7a4     +LDI R26 , LOW ( _0x16 + ( 20 ) )
000188 e0b2     +LDI R27 , HIGH ( _0x16 + ( 20 ) )
                 	__POINTW2MN _0x16,20
000189 d1ad      	RCALL SUBOPT_0x1
                 ; 0000 0052                         lcd_gotoxy(0,1);
                 ; 0000 0053                         lcd_puts("Relay-2 <=");
                +
00018a e7ad     +LDI R26 , LOW ( _0x16 + ( 29 ) )
00018b e0b2     +LDI R27 , HIGH ( _0x16 + ( 29 ) )
                 	__POINTW2MN _0x16,29
00018c c015      	RJMP _0x51
                 ; 0000 0054                         break;
                 ; 0000 0055                     case 3:
                 _0x17:
00018d 30e3      	CPI  R30,LOW(0x3)
00018e e0a0      	LDI  R26,HIGH(0x3)
00018f 07fa      	CPC  R31,R26
000190 f439      	BRNE _0x18
                 ; 0000 0056                         lcd_clear();
000191 d144      	RCALL _lcd_clear
                 ; 0000 0057                         lcd_puts("Relay-3 <=");
                +
000192 e8a8     +LDI R26 , LOW ( _0x16 + ( 40 ) )
000193 e0b2     +LDI R27 , HIGH ( _0x16 + ( 40 ) )
                 	__POINTW2MN _0x16,40
000194 d1a2      	RCALL SUBOPT_0x1
                 ; 0000 0058                         lcd_gotoxy(0,1);
                 ; 0000 0059                         lcd_puts("Relay-4 ");
                +
000195 e9a3     +LDI R26 , LOW ( _0x16 + ( 51 ) )
000196 e0b2     +LDI R27 , HIGH ( _0x16 + ( 51 ) )
                 	__POINTW2MN _0x16,51
000197 c00a      	RJMP _0x51
                 ; 0000 005A                         break;
                 ; 0000 005B                     case 4:
                 _0x18:
000198 30e4      	CPI  R30,LOW(0x4)
000199 e0a0      	LDI  R26,HIGH(0x4)
00019a 07fa      	CPC  R31,R26
00019b f439      	BRNE _0x14
                 ; 0000 005C                         lcd_clear();
00019c d139      	RCALL _lcd_clear
                 ; 0000 005D                         lcd_puts("Relay-3 ");
                +
00019d e9ac     +LDI R26 , LOW ( _0x16 + ( 60 ) )
00019e e0b2     +LDI R27 , HIGH ( _0x16 + ( 60 ) )
                 	__POINTW2MN _0x16,60
00019f d197      	RCALL SUBOPT_0x1
                 ; 0000 005E                         lcd_gotoxy(0,1);
                 ; 0000 005F                         lcd_puts("Relay-4 <=");
                +
0001a0 eaa5     +LDI R26 , LOW ( _0x16 + ( 69 ) )
0001a1 e0b2     +LDI R27 , HIGH ( _0x16 + ( 69 ) )
                 	__POINTW2MN _0x16,69
                 _0x51:
0001a2 d152      	RCALL _lcd_puts
                 ; 0000 0060                         break;
                 ; 0000 0061                     }
                 _0x14:
                 ; 0000 0062 
                 ; 0000 0063                 break;
                 ; 0000 0064                 }//Case menu page
                 ; 0000 0065 
                 ; 0000 0066             }
                 _0xE:
                 ; 0000 0067         }//If menu key
                 ; 0000 0068 
                 ; 0000 0069     //////////////////////////////////////////////////////////////////////////////////////////////
                 ; 0000 006A     //Select Key funtion:
                 ; 0000 006B     if (select_key==0)
                 _0x7:
0001a3 99b1      	SBIC 0x16,1
0001a4 c0ba      	RJMP _0x1A
                 ; 0000 006C         {
                 ; 0000 006D         switch (page_state)
0001a5 2fe1      	MOV  R30,R17
0001a6 e0f0      	LDI  R31,0
                 ; 0000 006E             {
                 ; 0000 006F             case menu_page:
0001a7 30e1      	CPI  R30,LOW(0x1)
0001a8 e0a0      	LDI  R26,HIGH(0x1)
0001a9 07fa      	CPC  R31,R26
0001aa f009      	BREQ PC+2
0001ab c051      	RJMP _0x1E
                 ; 0000 0070                 switch (rly_pick)
0001ac d184      	RCALL SUBOPT_0x0
                 ; 0000 0071                     {
                 ; 0000 0072 
                 ; 0000 0073                     case 1:
0001ad f479      	BRNE _0x22
                 ; 0000 0074                         lcd_clear();
0001ae d127      	RCALL _lcd_clear
                 ; 0000 0075                         lcd_puts("Relay-1 is:");
                +
0001af eba0     +LDI R26 , LOW ( _0x16 + ( 80 ) )
0001b0 e0b2     +LDI R27 , HIGH ( _0x16 + ( 80 ) )
                 	__POINTW2MN _0x16,80
0001b1 d143      	RCALL _lcd_puts
                 ; 0000 0076                         if (Read_relay_1==1) lcd_puts("ON");
0001b2 9b98      	SBIS 0x13,0
0001b3 c003      	RJMP _0x23
                +
0001b4 ebac     +LDI R26 , LOW ( _0x16 + ( 92 ) )
0001b5 e0b2     +LDI R27 , HIGH ( _0x16 + ( 92 ) )
                 	__POINTW2MN _0x16,92
0001b6 d13e      	RCALL _lcd_puts
                 ; 0000 0077                         if (Read_relay_1==0) lcd_puts("OFF");
                 _0x23:
0001b7 9998      	SBIC 0x13,0
0001b8 c003      	RJMP _0x24
                +
0001b9 ebaf     +LDI R26 , LOW ( _0x16 + ( 95 ) )
0001ba e0b2     +LDI R27 , HIGH ( _0x16 + ( 95 ) )
                 	__POINTW2MN _0x16,95
0001bb d139      	RCALL _lcd_puts
                 ; 0000 0078                         PORTD=segment[rly_pick];
                 _0x24:
0001bc c038      	RJMP _0x52
                 ; 0000 0079                         break;
                 ; 0000 007A                     case 2:
                 _0x22:
0001bd 30e2      	CPI  R30,LOW(0x2)
0001be e0a0      	LDI  R26,HIGH(0x2)
0001bf 07fa      	CPC  R31,R26
0001c0 f479      	BRNE _0x25
                 ; 0000 007B                         lcd_clear();
0001c1 d114      	RCALL _lcd_clear
                 ; 0000 007C                         lcd_puts("Relay-2 is:");
                +
0001c2 eca3     +LDI R26 , LOW ( _0x16 + ( 99 ) )
0001c3 e0b2     +LDI R27 , HIGH ( _0x16 + ( 99 ) )
                 	__POINTW2MN _0x16,99
0001c4 d130      	RCALL _lcd_puts
                 ; 0000 007D                         if (Read_relay_2==1) lcd_puts("ON");
0001c5 9b99      	SBIS 0x13,1
0001c6 c003      	RJMP _0x26
                +
0001c7 ecaf     +LDI R26 , LOW ( _0x16 + ( 111 ) )
0001c8 e0b2     +LDI R27 , HIGH ( _0x16 + ( 111 ) )
                 	__POINTW2MN _0x16,111
0001c9 d12b      	RCALL _lcd_puts
                 ; 0000 007E                         if (Read_relay_2==0) lcd_puts("OFF");
                 _0x26:
0001ca 9999      	SBIC 0x13,1
0001cb c003      	RJMP _0x27
                +
0001cc eda2     +LDI R26 , LOW ( _0x16 + ( 114 ) )
0001cd e0b2     +LDI R27 , HIGH ( _0x16 + ( 114 ) )
                 	__POINTW2MN _0x16,114
0001ce d126      	RCALL _lcd_puts
                 ; 0000 007F                         PORTD=segment[rly_pick];
                 _0x27:
0001cf c025      	RJMP _0x52
                 ; 0000 0080                         break;
                 ; 0000 0081                     case 3:
                 _0x25:
0001d0 30e3      	CPI  R30,LOW(0x3)
0001d1 e0a0      	LDI  R26,HIGH(0x3)
0001d2 07fa      	CPC  R31,R26
0001d3 f479      	BRNE _0x28
                 ; 0000 0082                         lcd_clear();
0001d4 d101      	RCALL _lcd_clear
                 ; 0000 0083                         lcd_puts("Relay-3 is:");
                +
0001d5 eda6     +LDI R26 , LOW ( _0x16 + ( 118 ) )
0001d6 e0b2     +LDI R27 , HIGH ( _0x16 + ( 118 ) )
                 	__POINTW2MN _0x16,118
0001d7 d11d      	RCALL _lcd_puts
                 ; 0000 0084                         if (Read_relay_3==1) lcd_puts("ON");
0001d8 9b9a      	SBIS 0x13,2
0001d9 c003      	RJMP _0x29
                +
0001da eea2     +LDI R26 , LOW ( _0x16 + ( 130 ) )
0001db e0b2     +LDI R27 , HIGH ( _0x16 + ( 130 ) )
                 	__POINTW2MN _0x16,130
0001dc d118      	RCALL _lcd_puts
                 ; 0000 0085                         if (Read_relay_3==0) lcd_puts("OFF");
                 _0x29:
0001dd 999a      	SBIC 0x13,2
0001de c003      	RJMP _0x2A
                +
0001df eea5     +LDI R26 , LOW ( _0x16 + ( 133 ) )
0001e0 e0b2     +LDI R27 , HIGH ( _0x16 + ( 133 ) )
                 	__POINTW2MN _0x16,133
0001e1 d113      	RCALL _lcd_puts
                 ; 0000 0086                         PORTD=segment[rly_pick];
                 _0x2A:
0001e2 c012      	RJMP _0x52
                 ; 0000 0087                         break;
                 ; 0000 0088                     case 4:
                 _0x28:
0001e3 30e4      	CPI  R30,LOW(0x4)
0001e4 e0a0      	LDI  R26,HIGH(0x4)
0001e5 07fa      	CPC  R31,R26
0001e6 f4a1      	BRNE _0x21
                 ; 0000 0089                         lcd_clear();
0001e7 d0ee      	RCALL _lcd_clear
                 ; 0000 008A                         lcd_puts("Relay-4 is:");
                +
0001e8 eea9     +LDI R26 , LOW ( _0x16 + ( 137 ) )
0001e9 e0b2     +LDI R27 , HIGH ( _0x16 + ( 137 ) )
                 	__POINTW2MN _0x16,137
0001ea d10a      	RCALL _lcd_puts
                 ; 0000 008B                         if (Read_relay_4==1) lcd_puts("ON");
0001eb 9b9b      	SBIS 0x13,3
0001ec c003      	RJMP _0x2C
                +
0001ed efa5     +LDI R26 , LOW ( _0x16 + ( 149 ) )
0001ee e0b2     +LDI R27 , HIGH ( _0x16 + ( 149 ) )
                 	__POINTW2MN _0x16,149
0001ef d105      	RCALL _lcd_puts
                 ; 0000 008C                         if (Read_relay_4==0) lcd_puts("OFF");
                 _0x2C:
0001f0 999b      	SBIC 0x13,3
0001f1 c003      	RJMP _0x2D
                +
0001f2 efa8     +LDI R26 , LOW ( _0x16 + ( 152 ) )
0001f3 e0b2     +LDI R27 , HIGH ( _0x16 + ( 152 ) )
                 	__POINTW2MN _0x16,152
0001f4 d100      	RCALL _lcd_puts
                 ; 0000 008D                         PORTD=segment[rly_pick];
                 _0x2D:
                 _0x52:
0001f5 2fe0      	MOV  R30,R16
0001f6 e0f0      	LDI  R31,0
0001f7 55e7      	SUBI R30,LOW(-_segment)
0001f8 4ffc      	SBCI R31,HIGH(-_segment)
0001f9 81e0      	LD   R30,Z
0001fa bbe2      	OUT  0x12,R30
                 ; 0000 008E                         break;
                 ; 0000 008F                     }
                 _0x21:
                 ; 0000 0090                 page_state=relay_page;
0001fb e012      	LDI  R17,LOW(2)
                 ; 0000 0091                 break;
0001fc c062      	RJMP _0x1D
                 ; 0000 0092             case relay_page:
                 _0x1E:
0001fd 30e2      	CPI  R30,LOW(0x2)
0001fe e0a0      	LDI  R26,HIGH(0x2)
0001ff 07fa      	CPC  R31,R26
000200 f009      	BREQ PC+2
000201 c05d      	RJMP _0x1D
                 ; 0000 0093                 switch (rly_pick)
000202 d12e      	RCALL SUBOPT_0x0
                 ; 0000 0094                     {
                 ; 0000 0095                     case 1:
000203 f4a1      	BRNE _0x32
                 ; 0000 0096                         En_relay_1=~(En_relay_1);
000204 9ba8      	SBIS 0x15,0
000205 c002      	RJMP _0x33
000206 98a8      	CBI  0x15,0
000207 c001      	RJMP _0x34
                 _0x33:
000208 9aa8      	SBI  0x15,0
                 _0x34:
                 ; 0000 0097                         lcd_clear();
000209 d0cc      	RCALL _lcd_clear
                 ; 0000 0098                         lcd_puts("Relay-1 is:");
                +
00020a efac     +LDI R26 , LOW ( _0x16 + ( 156 ) )
00020b e0b2     +LDI R27 , HIGH ( _0x16 + ( 156 ) )
                 	__POINTW2MN _0x16,156
00020c d0e8      	RCALL _lcd_puts
                 ; 0000 0099                         if (Read_relay_1==1) lcd_puts("ON");
00020d 9b98      	SBIS 0x13,0
00020e c003      	RJMP _0x35
                +
00020f e0a8     +LDI R26 , LOW ( _0x16 + ( 168 ) )
000210 e0b3     +LDI R27 , HIGH ( _0x16 + ( 168 ) )
                 	__POINTW2MN _0x16,168
000211 d0e3      	RCALL _lcd_puts
                 ; 0000 009A                         if (Read_relay_1==0) lcd_puts("OFF");
                 _0x35:
000212 9998      	SBIC 0x13,0
000213 c003      	RJMP _0x36
                +
000214 e0ab     +LDI R26 , LOW ( _0x16 + ( 171 ) )
000215 e0b3     +LDI R27 , HIGH ( _0x16 + ( 171 ) )
                 	__POINTW2MN _0x16,171
000216 d0de      	RCALL _lcd_puts
                 ; 0000 009B                         //PORTD=segment[rly_pick];
                 ; 0000 009C 
                 ; 0000 009D                         break;
                 _0x36:
000217 c047      	RJMP _0x31
                 ; 0000 009E                     case 2:
                 _0x32:
000218 30e2      	CPI  R30,LOW(0x2)
000219 e0a0      	LDI  R26,HIGH(0x2)
00021a 07fa      	CPC  R31,R26
00021b f4a1      	BRNE _0x37
                 ; 0000 009F                         En_relay_2=~(En_relay_2);
00021c 9ba9      	SBIS 0x15,1
00021d c002      	RJMP _0x38
00021e 98a9      	CBI  0x15,1
00021f c001      	RJMP _0x39
                 _0x38:
000220 9aa9      	SBI  0x15,1
                 _0x39:
                 ; 0000 00A0                         lcd_clear();
000221 d0b4      	RCALL _lcd_clear
                 ; 0000 00A1                         lcd_puts("Relay-2 is:");
                +
000222 e0af     +LDI R26 , LOW ( _0x16 + ( 175 ) )
000223 e0b3     +LDI R27 , HIGH ( _0x16 + ( 175 ) )
                 	__POINTW2MN _0x16,175
000224 d0d0      	RCALL _lcd_puts
                 ; 0000 00A2                         if (Read_relay_2==1) lcd_puts("ON");
000225 9b99      	SBIS 0x13,1
000226 c003      	RJMP _0x3A
                +
000227 e1ab     +LDI R26 , LOW ( _0x16 + ( 187 ) )
000228 e0b3     +LDI R27 , HIGH ( _0x16 + ( 187 ) )
                 	__POINTW2MN _0x16,187
000229 d0cb      	RCALL _lcd_puts
                 ; 0000 00A3                         if (Read_relay_2==0) lcd_puts("OFF");
                 _0x3A:
00022a 9999      	SBIC 0x13,1
00022b c003      	RJMP _0x3B
                +
00022c e1ae     +LDI R26 , LOW ( _0x16 + ( 190 ) )
00022d e0b3     +LDI R27 , HIGH ( _0x16 + ( 190 ) )
                 	__POINTW2MN _0x16,190
00022e d0c6      	RCALL _lcd_puts
                 ; 0000 00A4                         //PORTD=segment[rly_pick];
                 ; 0000 00A5                         break;
                 _0x3B:
00022f c02f      	RJMP _0x31
                 ; 0000 00A6                     case 3:
                 _0x37:
000230 30e3      	CPI  R30,LOW(0x3)
000231 e0a0      	LDI  R26,HIGH(0x3)
000232 07fa      	CPC  R31,R26
000233 f4a1      	BRNE _0x3C
                 ; 0000 00A7                         En_relay_3=~(En_relay_3);
000234 9baa      	SBIS 0x15,2
000235 c002      	RJMP _0x3D
000236 98aa      	CBI  0x15,2
000237 c001      	RJMP _0x3E
                 _0x3D:
000238 9aaa      	SBI  0x15,2
                 _0x3E:
                 ; 0000 00A8                         lcd_clear();
000239 d09c      	RCALL _lcd_clear
                 ; 0000 00A9                         lcd_puts("Relay-3 is:");
                +
00023a e2a2     +LDI R26 , LOW ( _0x16 + ( 194 ) )
00023b e0b3     +LDI R27 , HIGH ( _0x16 + ( 194 ) )
                 	__POINTW2MN _0x16,194
00023c d0b8      	RCALL _lcd_puts
                 ; 0000 00AA                         if (Read_relay_3==1) lcd_puts("ON");
00023d 9b9a      	SBIS 0x13,2
00023e c003      	RJMP _0x3F
                +
00023f e2ae     +LDI R26 , LOW ( _0x16 + ( 206 ) )
000240 e0b3     +LDI R27 , HIGH ( _0x16 + ( 206 ) )
                 	__POINTW2MN _0x16,206
000241 d0b3      	RCALL _lcd_puts
                 ; 0000 00AB                         if (Read_relay_3==0) lcd_puts("OFF");
                 _0x3F:
000242 999a      	SBIC 0x13,2
000243 c003      	RJMP _0x40
                +
000244 e3a1     +LDI R26 , LOW ( _0x16 + ( 209 ) )
000245 e0b3     +LDI R27 , HIGH ( _0x16 + ( 209 ) )
                 	__POINTW2MN _0x16,209
000246 d0ae      	RCALL _lcd_puts
                 ; 0000 00AC                         //PORTD=segment[rly_pick];
                 ; 0000 00AD                         break;
                 _0x40:
000247 c017      	RJMP _0x31
                 ; 0000 00AE                     case 4:
                 _0x3C:
000248 30e4      	CPI  R30,LOW(0x4)
000249 e0a0      	LDI  R26,HIGH(0x4)
00024a 07fa      	CPC  R31,R26
00024b f499      	BRNE _0x31
                 ; 0000 00AF                         En_relay_4=~(En_relay_4);
00024c 9bab      	SBIS 0x15,3
00024d c002      	RJMP _0x42
00024e 98ab      	CBI  0x15,3
00024f c001      	RJMP _0x43
                 _0x42:
000250 9aab      	SBI  0x15,3
                 _0x43:
                 ; 0000 00B0                         lcd_clear();
000251 d084      	RCALL _lcd_clear
                 ; 0000 00B1                         lcd_puts("Relay-4 is:");
                +
000252 e3a5     +LDI R26 , LOW ( _0x16 + ( 213 ) )
000253 e0b3     +LDI R27 , HIGH ( _0x16 + ( 213 ) )
                 	__POINTW2MN _0x16,213
000254 d0a0      	RCALL _lcd_puts
                 ; 0000 00B2                         if (Read_relay_4==1) lcd_puts("ON");
000255 9b9b      	SBIS 0x13,3
000256 c003      	RJMP _0x44
                +
000257 e4a1     +LDI R26 , LOW ( _0x16 + ( 225 ) )
000258 e0b3     +LDI R27 , HIGH ( _0x16 + ( 225 ) )
                 	__POINTW2MN _0x16,225
000259 d09b      	RCALL _lcd_puts
                 ; 0000 00B3                         if (Read_relay_4==0) lcd_puts("OFF");
                 _0x44:
00025a 999b      	SBIC 0x13,3
00025b c003      	RJMP _0x45
                +
00025c e4a4     +LDI R26 , LOW ( _0x16 + ( 228 ) )
00025d e0b3     +LDI R27 , HIGH ( _0x16 + ( 228 ) )
                 	__POINTW2MN _0x16,228
00025e d096      	RCALL _lcd_puts
                 ; 0000 00B4                         //PORTD=segment[rly_pick];
                 ; 0000 00B5                         break;
                 _0x45:
                 ; 0000 00B6                     }
                 _0x31:
                 ; 0000 00B7             }
                 _0x1D:
                 ; 0000 00B8         }
                 ; 0000 00B9     if (status_key==0)
                 _0x1A:
00025f 99b2      	SBIC 0x16,2
000260 c034      	RJMP _0x46
                 ; 0000 00BA         {
                 ; 0000 00BB         lcd_clear();
000261 d074      	RCALL _lcd_clear
                 ; 0000 00BC         lcd_puts(" R1  R2  R3  R4  ");
                +
000262 e4a8     +LDI R26 , LOW ( _0x16 + ( 232 ) )
000263 e0b3     +LDI R27 , HIGH ( _0x16 + ( 232 ) )
                 	__POINTW2MN _0x16,232
000264 d090      	RCALL _lcd_puts
                 ; 0000 00BD         lcd_gotoxy(1,1);
000265 e0e1      	LDI  R30,LOW(1)
000266 d0d5      	RCALL SUBOPT_0x2
                 ; 0000 00BE         if (Read_relay_1==1) lcd_puts("ON");
000267 9b98      	SBIS 0x13,0
000268 c003      	RJMP _0x47
                +
000269 e5aa     +LDI R26 , LOW ( _0x16 + ( 250 ) )
00026a e0b3     +LDI R27 , HIGH ( _0x16 + ( 250 ) )
                 	__POINTW2MN _0x16,250
00026b d089      	RCALL _lcd_puts
                 ; 0000 00BF         if (Read_relay_1==0) lcd_puts("OFF");
                 _0x47:
00026c 9998      	SBIC 0x13,0
00026d c003      	RJMP _0x48
                +
00026e e5ad     +LDI R26 , LOW ( _0x16 + ( 253 ) )
00026f e0b3     +LDI R27 , HIGH ( _0x16 + ( 253 ) )
                 	__POINTW2MN _0x16,253
000270 d084      	RCALL _lcd_puts
                 ; 0000 00C0         lcd_gotoxy(5,1);
                 _0x48:
000271 e0e5      	LDI  R30,LOW(5)
000272 d0c9      	RCALL SUBOPT_0x2
                 ; 0000 00C1         if (Read_relay_2==1) lcd_puts("ON");
000273 9b99      	SBIS 0x13,1
000274 c003      	RJMP _0x49
                +
000275 e6a1     +LDI R26 , LOW ( _0x16 + ( 257 ) )
000276 e0b3     +LDI R27 , HIGH ( _0x16 + ( 257 ) )
                 	__POINTW2MN _0x16,257
000277 d07d      	RCALL _lcd_puts
                 ; 0000 00C2         if (Read_relay_2==0) lcd_puts("OFF");
                 _0x49:
000278 9999      	SBIC 0x13,1
000279 c003      	RJMP _0x4A
                +
00027a e6a4     +LDI R26 , LOW ( _0x16 + ( 260 ) )
00027b e0b3     +LDI R27 , HIGH ( _0x16 + ( 260 ) )
                 	__POINTW2MN _0x16,260
00027c d078      	RCALL _lcd_puts
                 ; 0000 00C3         lcd_gotoxy(9,1);
                 _0x4A:
00027d e0e9      	LDI  R30,LOW(9)
00027e d0bd      	RCALL SUBOPT_0x2
                 ; 0000 00C4         if (Read_relay_3==1) lcd_puts("ON");
00027f 9b9a      	SBIS 0x13,2
000280 c003      	RJMP _0x4B
                +
000281 e6a8     +LDI R26 , LOW ( _0x16 + ( 264 ) )
000282 e0b3     +LDI R27 , HIGH ( _0x16 + ( 264 ) )
                 	__POINTW2MN _0x16,264
000283 d071      	RCALL _lcd_puts
                 ; 0000 00C5         if (Read_relay_3==0) lcd_puts("OFF");
                 _0x4B:
000284 999a      	SBIC 0x13,2
000285 c003      	RJMP _0x4C
                +
000286 e6ab     +LDI R26 , LOW ( _0x16 + ( 267 ) )
000287 e0b3     +LDI R27 , HIGH ( _0x16 + ( 267 ) )
                 	__POINTW2MN _0x16,267
000288 d06c      	RCALL _lcd_puts
                 ; 0000 00C6         lcd_gotoxy(13,1);
                 _0x4C:
000289 e0ed      	LDI  R30,LOW(13)
00028a d0b1      	RCALL SUBOPT_0x2
                 ; 0000 00C7         if (Read_relay_4==1) lcd_puts("ON");
00028b 9b9b      	SBIS 0x13,3
00028c c003      	RJMP _0x4D
                +
00028d e6af     +LDI R26 , LOW ( _0x16 + ( 271 ) )
00028e e0b3     +LDI R27 , HIGH ( _0x16 + ( 271 ) )
                 	__POINTW2MN _0x16,271
00028f d065      	RCALL _lcd_puts
                 ; 0000 00C8         if (Read_relay_4==0) lcd_puts("OFF");
                 _0x4D:
000290 999b      	SBIC 0x13,3
000291 c003      	RJMP _0x4E
                +
000292 e7a2     +LDI R26 , LOW ( _0x16 + ( 274 ) )
000293 e0b3     +LDI R27 , HIGH ( _0x16 + ( 274 ) )
                 	__POINTW2MN _0x16,274
000294 d060      	RCALL _lcd_puts
                 ; 0000 00C9         }
                 _0x4E:
                 ; 0000 00CA     delay_ms(225);
                 _0x46:
000295 eea1      	LDI  R26,LOW(225)
000296 e0b0      	LDI  R27,0
000297 940e 0351 	CALL _delay_ms
                 ; 0000 00CB     }//While
000299 cec5      	RJMP _0x4
                 ; 0000 00CC }
                 _0x4F:
00029a cfff      	RJMP _0x4F
                 ; .FEND
                 
                 	.DSEG
                 _0x16:
000260           	.BYTE 0x116
                 ;
                 ;void lcd_start()
                 ; 0000 00CF {
                 
                 	.CSEG
                 _lcd_start:
                 ; .FSTART _lcd_start
                 ; 0000 00D0     lcd_init(16);
00029b e1a0      	LDI  R26,LOW(16)
00029c d069      	RCALL _lcd_init
                 ; 0000 00D1     lcd_gotoxy(1,1);
00029d e0e1      	LDI  R30,LOW(1)
00029e d09d      	RCALL SUBOPT_0x2
                 ; 0000 00D2     lcd_puts("Kamyab Tajmiri");
                +
00029f e7a6     +LDI R26 , LOW ( _0x50 + ( 0 ) )
0002a0 e0b3     +LDI R27 , HIGH ( _0x50 + ( 0 ) )
                 	__POINTW2MN _0x50,0
0002a1 d09d      	RCALL SUBOPT_0x3
                 ; 0000 00D3     delay_ms(1000);
                 ; 0000 00D4     lcd_clear();
                 ; 0000 00D5     lcd_puts("Are you Ready?");
                +
0002a2 e8a5     +LDI R26 , LOW ( _0x50 + ( 15 ) )
0002a3 e0b3     +LDI R27 , HIGH ( _0x50 + ( 15 ) )
                 	__POINTW2MN _0x50,15
0002a4 d09a      	RCALL SUBOPT_0x3
                 ; 0000 00D6     delay_ms(1000);
                 ; 0000 00D7     lcd_clear();
                 ; 0000 00D8     lcd_puts("if y just press menu");
                +
0002a5 e9a4     +LDI R26 , LOW ( _0x50 + ( 30 ) )
0002a6 e0b3     +LDI R27 , HIGH ( _0x50 + ( 30 ) )
                 	__POINTW2MN _0x50,30
0002a7 d04d      	RCALL _lcd_puts
                 ; 0000 00D9 
                 ; 0000 00DA }
0002a8 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x50:
000376           	.BYTE 0x33
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0002a9 93aa      	ST   -Y,R26
0002aa b3eb      	IN   R30,0x1B
0002ab 70ef      	ANDI R30,LOW(0xF)
0002ac 2fae      	MOV  R26,R30
0002ad 81e8      	LD   R30,Y
0002ae 7fe0      	ANDI R30,LOW(0xF0)
0002af 2bea      	OR   R30,R26
0002b0 bbeb      	OUT  0x1B,R30
                +
0002b1 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002b2 958a     +DEC R24
0002b3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002b4 9ada      	SBI  0x1B,2
                +
0002b5 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002b6 958a     +DEC R24
0002b7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002b8 98da      	CBI  0x1B,2
                +
0002b9 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002ba 958a     +DEC R24
0002bb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002bc c072      	RJMP _0x2020001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0002bd 93aa      	ST   -Y,R26
0002be 81a8      	LD   R26,Y
0002bf dfe9      	RCALL __lcd_write_nibble_G100
0002c0 81e8          ld    r30,y
0002c1 95e2          swap  r30
0002c2 83e8          st    y,r30
0002c3 81a8      	LD   R26,Y
0002c4 dfe4      	RCALL __lcd_write_nibble_G100
                +
0002c5 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0002c6 958a     +DEC R24
0002c7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0002c8 c066      	RJMP _0x2020001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0002c9 93aa      	ST   -Y,R26
0002ca 81e8      	LD   R30,Y
0002cb e0f0      	LDI  R31,0
0002cc 54ec      	SUBI R30,LOW(-__base_y_G100)
0002cd 4ffc      	SBCI R31,HIGH(-__base_y_G100)
0002ce 81e0      	LD   R30,Z
0002cf 81a9      	LDD  R26,Y+1
0002d0 0fae      	ADD  R26,R30
0002d1 dfeb      	RCALL __lcd_write_data
0002d2 8059      	LDD  R5,Y+1
0002d3 8048      	LDD  R4,Y+0
0002d4 9622      	ADIW R28,2
0002d5 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0002d6 e0a2      	LDI  R26,LOW(2)
0002d7 d06d      	RCALL SUBOPT_0x4
0002d8 e0ac      	LDI  R26,LOW(12)
0002d9 dfe3      	RCALL __lcd_write_data
0002da e0a1      	LDI  R26,LOW(1)
0002db d069      	RCALL SUBOPT_0x4
0002dc e0e0      	LDI  R30,LOW(0)
0002dd 2e4e      	MOV  R4,R30
0002de 2e5e      	MOV  R5,R30
0002df 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0002e0 93aa      	ST   -Y,R26
0002e1 81a8      	LD   R26,Y
0002e2 30aa      	CPI  R26,LOW(0xA)
0002e3 f011      	BREQ _0x2000005
0002e4 1457      	CP   R5,R7
0002e5 f048      	BRLO _0x2000004
                 _0x2000005:
0002e6 e0e0      	LDI  R30,LOW(0)
0002e7 93ea      	ST   -Y,R30
0002e8 9443      	INC  R4
0002e9 2da4      	MOV  R26,R4
0002ea dfde      	RCALL _lcd_gotoxy
0002eb 81a8      	LD   R26,Y
0002ec 30aa      	CPI  R26,LOW(0xA)
0002ed f409      	BRNE _0x2000007
0002ee c040      	RJMP _0x2020001
                 _0x2000007:
                 _0x2000004:
0002ef 9453      	INC  R5
0002f0 9ad8      	SBI  0x1B,0
0002f1 81a8      	LD   R26,Y
0002f2 dfca      	RCALL __lcd_write_data
0002f3 98d8      	CBI  0x1B,0
0002f4 c03a      	RJMP _0x2020001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0002f5 93ba      	ST   -Y,R27
0002f6 93aa      	ST   -Y,R26
0002f7 931a      	ST   -Y,R17
                 _0x2000008:
0002f8 81a9      	LDD  R26,Y+1
0002f9 81ba      	LDD  R27,Y+1+1
0002fa 91ed      	LD   R30,X+
0002fb 83a9      	STD  Y+1,R26
0002fc 83ba      	STD  Y+1+1,R27
0002fd 2f1e      	MOV  R17,R30
0002fe 30e0      	CPI  R30,0
0002ff f019      	BREQ _0x200000A
000300 2fa1      	MOV  R26,R17
000301 dfde      	RCALL _lcd_putchar
000302 cff5      	RJMP _0x2000008
                 _0x200000A:
000303 8118      	LDD  R17,Y+0
000304 9623      	ADIW R28,3
000305 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000306 93aa      	ST   -Y,R26
000307 b3ea      	IN   R30,0x1A
000308 6fe0      	ORI  R30,LOW(0xF0)
000309 bbea      	OUT  0x1A,R30
00030a 9ad2      	SBI  0x1A,2
00030b 9ad0      	SBI  0x1A,0
00030c 9ad1      	SBI  0x1A,1
00030d 98da      	CBI  0x1B,2
00030e 98d8      	CBI  0x1B,0
00030f 98d9      	CBI  0x1B,1
000310 8078      	LDD  R7,Y+0
000311 81e8      	LD   R30,Y
000312 58e0      	SUBI R30,-LOW(128)
                +
000313 93e0 03b6+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000315 81e8      	LD   R30,Y
000316 54e0      	SUBI R30,-LOW(192)
                +
000317 93e0 03b7+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000319 e1a4      	LDI  R26,LOW(20)
00031a e0b0      	LDI  R27,0
00031b 940e 0351 	CALL _delay_ms
00031d d02c      	RCALL SUBOPT_0x5
00031e d02b      	RCALL SUBOPT_0x5
00031f d02a      	RCALL SUBOPT_0x5
000320 e2a0      	LDI  R26,LOW(32)
000321 df87      	RCALL __lcd_write_nibble_G100
                +
000322 ec88     +LDI R24 , LOW ( 200 )
000323 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000324 9701     +SBIW R24 , 1
000325 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000326 e2a8      	LDI  R26,LOW(40)
000327 df95      	RCALL __lcd_write_data
000328 e0a4      	LDI  R26,LOW(4)
000329 df93      	RCALL __lcd_write_data
00032a e8a5      	LDI  R26,LOW(133)
00032b df91      	RCALL __lcd_write_data
00032c e0a6      	LDI  R26,LOW(6)
00032d df8f      	RCALL __lcd_write_data
00032e dfa7      	RCALL _lcd_clear
                 _0x2020001:
00032f 9621      	ADIW R28,1
000330 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _segment:
0003a9           	.BYTE 0xB
                 __base_y_G100:
0003b4           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000331 2fe0      	MOV  R30,R16
000332 e0f0      	LDI  R31,0
000333 30e1      	CPI  R30,LOW(0x1)
000334 e0a0      	LDI  R26,HIGH(0x1)
000335 07fa      	CPC  R31,R26
000336 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1:
000337 dfbd      	RCALL _lcd_puts
000338 e0e0      	LDI  R30,LOW(0)
000339 93ea      	ST   -Y,R30
00033a e0a1      	LDI  R26,LOW(1)
00033b cf8d      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
00033c 93ea      	ST   -Y,R30
00033d e0a1      	LDI  R26,LOW(1)
00033e cf8a      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
00033f dfb5      	RCALL _lcd_puts
000340 eea8      	LDI  R26,LOW(1000)
000341 e0b3      	LDI  R27,HIGH(1000)
000342 940e 0351 	CALL _delay_ms
000344 cf91      	RJMP _lcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000345 df77      	RCALL __lcd_write_data
000346 e0a3      	LDI  R26,LOW(3)
000347 e0b0      	LDI  R27,0
000348 940c 0351 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5:
00034a e3a0      	LDI  R26,LOW(48)
00034b df5d      	RCALL __lcd_write_nibble_G100
                +
00034c ec88     +LDI R24 , LOW ( 200 )
00034d e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00034e 9701     +SBIW R24 , 1
00034f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000350 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000351 9610      	adiw r26,0
000352 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000353 ed80     +LDI R24 , LOW ( 0x7D0 )
000354 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000355 9701     +SBIW R24 , 1
000356 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000357 95a8      	wdr
000358 9711      	sbiw r26,1
000359 f7c9      	brne __delay_ms0
                 __delay_ms1:
00035a 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   7 r17:  10 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  21 r25:   5 r26: 114 r27:  53 r28:   4 r29:   1 r30:  91 r31:  24 
x  :   4 y  :  31 z  :   9 
Registers used: 19 out of 35 (54.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   1 
adiw  :   4 and   :   0 andi  :   2 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   6 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   0 brne  :  28 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   3 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :  14 cpi   :  19 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  23 ld    :  13 ldd   :   7 ldi   : 167 
lds   :   2 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  12 movw  :   3 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   1 
ori   :   1 out   :  16 pop   :   0 push  :   0 rcall :  86 ret   :   8 
reti  :   0 rjmp  :  60 rol   :   0 ror   :   0 sbc   :   0 sbci  :   2 
sbi   :   9 sbic  :  15 sbis  :  16 sbiw  :   7 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  15 std   :   2 sts   :   2 sub   :   0 subi  :   5 swap  :   1 
tst   :   0 wdr   :   1 
Instructions used: 41 out of 116 (35.3%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006b6   1222    496   1718   32768   5.2%
[.dseg] 0x000060 0x0003b8      0    344    344    2048  16.8%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 4 warnings
