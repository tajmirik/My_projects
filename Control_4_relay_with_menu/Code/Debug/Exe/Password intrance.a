;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;Project :Password
;Version :0.0
;Date    : 3/16/2024
;Chip type               : ATmega32
;
;AVR Core Clock frequency: 8.000000 MHz
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <alcd.h>
;#define Y1   PINC.4
;#define Y2   PINC.5
;#define Y3   PINC.6
;#define Y4   PINC.7
;
;// Alphanumeric LCD functions
;void lcd_blink();
;// Declare your global variables here
;enum menu_state
;{
;    password,
;    password_correct,
;    password_wrong
;}state;
;unsigned char keypad[4][4]={{'7','8','9','/'},//1
;                            {'4','5','6','*'},//2
;                            {'1','2','3','-'},//3
;                            {'c','0','=','+'}};//4

	.DSEG
;unsigned char keypad_x[4]={0x0e,0x0d,0x0b,0x07};
;void main(void)
; 0000 0024 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0025 
; 0000 0026 /////////////////// Declare your local variables here
; 0000 0027 unsigned char keypad_counter=0,temp_char,pass_indic=0,pass_counter=0,pass_str[5];
; 0000 0028 ///////////////////Start of MCU pin init:
; 0000 0029 DDRB=0XFF;
;PCODE: $0000000E VOL: 0
;	keypad_counter -> R17
;	temp_char -> R16
;	pass_indic -> R19
;	pass_counter -> R18
;	pass_str -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002A DDRC=0X0f;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002B PORTC=0X0f;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 002C 
; 0000 002D ///////////////////End of MCU pin init
; 0000 002E 
; 0000 002F ///////////////////LCD initial:
; 0000 0030 lcd_init(16);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0031 lcd_blink();
;PCODE: $0000001D VOL: 0
; 0000 0032 state=password;
;PCODE: $0000001E VOL: 0
; 0000 0033 while (1)
;PCODE: $0000001F VOL: 0
; 0000 0034       {
; 0000 0035       temp_char=1;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0036       // Place your code here
; 0000 0037       ///////////////////////////Keypad:////////////////////////////////////////
; 0000 0038       for (keypad_counter=0;keypad_counter<4;keypad_counter++)
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0039         {
; 0000 003A         PORTC=keypad_x[keypad_counter];
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 003B 
; 0000 003C         if (Y1==0|Y2==0|Y3==0|Y4==0)
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 003D             {
; 0000 003E             if (Y1==0)
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 003F                 {
; 0000 0040                 temp_char=keypad[keypad_counter][0];
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0041 
; 0000 0042                 }//for>>if>>if Y1
; 0000 0043             if (Y2==0)
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0044                 {
; 0000 0045                 temp_char=keypad[keypad_counter][1];
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0046                 //lcd_putchar(temp_char);
; 0000 0047                 }//for>>if>>if Y1
; 0000 0048             if (Y3==0)
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0049                 {
; 0000 004A                 temp_char=keypad[keypad_counter][2];
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 004B                 //lcd_putchar(temp_char);
; 0000 004C                 }//for>>if>>if Y1
; 0000 004D             if (Y4==0)
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 004E                 {
; 0000 004F                 temp_char=keypad[keypad_counter][3];
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0050                 //lcd_putchar(temp_char);
; 0000 0051                 }//for>>if>>if Y's
; 0000 0052             break;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0053             }//if
; 0000 0054         }//for
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0055       //if you have pressed any buttom then it's equal to tempchar
; 0000 0056       ///////////////////////////End of Keypad/////////////////////////////////
; 0000 0057 
; 0000 0058 ///////////////////////////////decision making unit:///////////////////////////
; 0000 0059       switch (state)
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 005A         {
; 0000 005B         case password:
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 005C             {
; 0000 005D              if (pass_indic==0)
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 005E                 {
; 0000 005F                 lcd_clear();
;PCODE: $0000007F VOL: 0
; 0000 0060                 lcd_puts("Password: ");
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0061                 delay_ms(1);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0062                 lcd_blink();
;PCODE: $00000086 VOL: 0
; 0000 0063                 pass_indic=1;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0064                 }
; 0000 0065              if (temp_char!=1)
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0066                 {
; 0000 0067                 *(pass_str+pass_counter)=temp_char;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0068                 lcd_putchar('*');
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0069                 pass_counter++;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 006A 
; 0000 006B                 };
;PCODE: $00000096 VOL: 0
; 0000 006C              if (pass_counter==4)
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 006D                 {
; 0000 006E                 pass_counter=0;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 006F                  if (pass_str[0]=='1'&&pass_str[1]=='4'&&pass_str[2]=='0'&&pass_str[3]=='2')
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0070                     {
; 0000 0071                     state=password_correct;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0072                     }
; 0000 0073                  else
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0074                      {
; 0000 0075                      state=password_wrong;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0076                      }
;PCODE: $000000B2 VOL: 0
; 0000 0077                 }
; 0000 0078             break;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0079             }
; 0000 007A         case password_correct:
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 007B             {
; 0000 007C             lcd_clear();
;PCODE: $000000B8 VOL: 0
; 0000 007D             delay_ms(1);
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 007E             lcd_puts("Correct");
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 007F             delay_ms(1000);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0080             state=password;
;PCODE: $000000C1 VOL: 0
; 0000 0081             pass_indic=0;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0082             break;
;PCODE: $000000C4 VOL: 0
; 0000 0083             }
; 0000 0084         case password_wrong:
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0085             {
; 0000 0086             lcd_clear();
;PCODE: $000000C8 VOL: 0
; 0000 0087             lcd_puts("Fuck off ");
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0088             PORTB|=(1<<0);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0089             state=password;
;PCODE: $000000CE VOL: 0
; 0000 008A             pass_indic=0;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 008B             break;
;PCODE: $000000D1 VOL: 0
; 0000 008C             }
; 0000 008D 
; 0000 008E         }//switch
;PCODE: $000000D2 VOL: 0
; 0000 008F       delay_ms(225);
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 0090       }//while
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0091 }//main
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0

	.DSEG
_0x15:
	.BYTE 0x1D
;
;
;
;void lcd_blink()
; 0000 0096 {

	.CSEG
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0097 PORTA=0B00000100;
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0098 PORTA=0B00000000;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0099 PORTA=0B11110100;
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 009A PORTA=0B11110000;
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 009B 
; 0000 009C }
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
